function [Ahat, elapsed, relErr] = generalized_Nystrom(A, Om, Psi, recordTime)
% GENERALIZED_NYSTROM (stabilized) 
% This version of Generalized Nystrom follows Yuji nakatsukasa's
% 

%   [Ahat, elapsed, relErr] = generalized_Nystrom(A, Om, Psi, recordTime)
%   Inputs:
%     A          — (nGrid×nSnap) data matrix
%     Om         — (nSnap×k) right sketch
%     Psi        — (nGrid×m) left sketch (m ≥ k)
%     recordTime — logical (optional)
%   Outputs:
%     Ahat   — rank‐k approximation of A
%     elapsed — time to form sketch + QR + triangular solve
%     relErr — ‖A − Ahat‖_F/‖A‖_F (if recordTime)

  if nargin < 4, recordTime = false; end
  if recordTime, t0 = tic; end

  % form the two sketches
  AX = A * Om;            % (nGrid × k)
  YA = Psi' * A;          % (m     × nSnap)

  % QR of the small core
  [Q, R] = qr(Psi' * AX, 0);  % Q: (m×k), R: (k×k)

  % stable pseudoinverse application
  U = AX / R;             % (nGrid×k)
  V = (Q' * YA)';         % (nSnap×k)

  % final approximation
  if recordTime
    elapsed = toc(t0);
     Ahat = U * V';          % (nGrid×nSnap)

    relErr  = norm(A - Ahat, 'fro') / norm(A, 'fro');
  else
    elapsed = [];
    relErr  = [];
  end
end
